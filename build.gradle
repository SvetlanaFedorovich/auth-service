plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
//    id 'checkstyle'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'com.google.protobuf' version '0.9.4'

}
//checkstyle {
//    toolVersion '7.8.1'
//    configFile file("checkstyle.xml")
//}
ext {
    versions = [
            wiremock: "3.2.0",
            grpc    : "1.61.1",
            protobuf: "3.25.3",
            lombok: "1.18.30",
            junit: "5.9.2",
            keycloak: "23.0.7",
            grpcClient: "2.15.0.RELEASE",
            grpcWiremock: '0.5.0'
    ]
}

group = 'mvp.project'
version = '1.0.1'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation ("org.springframework.boot:spring-boot-starter-data-redis",
                   "org.springframework.boot:spring-boot-starter-validation",
                   "org.springframework.boot:spring-boot-starter-web",
                   "org.keycloak:keycloak-spring-boot-starter:$versions.keycloak",
                   "javax.annotation:javax.annotation-api:1.3.2",
                   "com.google.protobuf:protobuf-java:$versions.protobuf",
                   "net.devh:grpc-client-spring-boot-autoconfigure:$versions.grpcClient")
    compileOnly (
                 "net.devh:grpc-client-spring-boot-starter:$versions.grpcClient",
                 "org.projectlombok:lombok:$versions.lombok")

    annotationProcessor "org.projectlombok:lombok:$versions.lombok"
    runtimeOnly "org.postgresql:postgresql"

    testImplementation (
                        "org.springframework.boot:spring-boot-starter-test",
                        "org.junit.jupiter:junit-jupiter-api:$versions.junit",
                        "org.wiremock:wiremock-grpc-extension:$versions.grpcWiremock")

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$versions.junit"
}


configurations.configureEach {
    resolutionStrategy.eachDependency {
        if (requested.group == "org.eclipse.jetty") {
            useVersion("11.0.18")
            because("Jetty 12.x.x from Spring Boot 3.2.x is incompatible with Wiremock 3.3.x.")
        }
    }
}

test {
    useJUnitPlatform()
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.25.3"
    }

    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.61.1"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {
                outputSubDir = 'java'
            }
        }

        all().each { task ->
            task.generateDescriptorSet = true
//            task.descriptorSetOptions.path = file("$projectDir/src/test/resources/wiremock/grpc/services.dsc")
            task.descriptorSetOptions.includeImports = true
        }
    }
}


